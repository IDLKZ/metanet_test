@page "/pay/{CourseAlias}"
@inject IPaymentService PaymentService
@using System.Security.Claims
@inject NavigationManager Navigation
@inject IHomeService HomeService
@inject IToaster _toaster;
    <div class="pt-120 min-vh-100">
        <AuthorizeView Roles="Customer">
            @if (hasSubscription == false)
            {
                @if (Course != null && paymentDto != null)
            {
                <div class="row py-5">
                    <div class="col-md-6">
                        <div class="card">
                            <img src="@Course.ImageUrl" class="card-img-top" alt="">
                            <div class="card-body">
                                <h5 class="card-title">@Course.Title</h5>
                                <p class="card-text">
                                    @Course.Description
                                </p>
                                <div class="text-center">
                                    <button @onclick="PayViaApi" class="btn btn-primary text-white">Сформировать счет на оплату</button>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-md-6 d-flex justify-content-center">
                        @if (paymentDto != null && isReady)
                        {
                            <div class="text-center">
                                <div class="row px-4">
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <address>
                                            <strong>Metanet Education</strong>
                                            <br>
                                            Республика Казахстан, г.Нурсултан
                                            <br>
                                            ул.Мангилик ел
                                            <br>
                                            <abbr title="Phone">Телефон:</abbr> (213) 484-6829
                                        </address>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6 text-right">
                                        <p>
                                            <em>ДАТА: @DateTime.UtcNow.Day / @DateTime.UtcNow.Month / @DateTime.UtcNow.Year</em>
                                        </p>
                                        <p>
                                            <em>Номер #: @paymentDto.ORDER</em>
                                        </p>
                                    </div>
                                </div>
                                <div class="row table-responsive">
                                    <div class="text-center">
                                        <h3>Оплата счета @paymentDto.ORDER </h3>
                                    </div>
                                    <table class="table">
                                        <thead class="thead-dark">
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">Наименование</th>
                                            <th scope="col">Цена</th>
                                            <th scope="col">Итого</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        <tr>
                                            <th scope="row">1</th>
                                            <td>@paymentDto.DESC</td>
                                            <td>@paymentDto.AMOUNT @paymentDto.CURRENCY</td>
                                            <td>@paymentDto.AMOUNT @paymentDto.CURRENCY</td>
                                        </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <form method="post" action="https://ecom.jysanbank.kz/ecom/api">
                                    <input type="text" hidden name="ORDER" value="@paymentDto.ORDER">
                                    <input type="text" hidden name="AMOUNT" value="@paymentDto.AMOUNT">
                                    <input type="text" hidden name="CURRENCY" value="@paymentDto.CURRENCY">
                                    <input type="text" hidden value="@paymentDto.MERCHANT" name="MERCHANT">
                                    <input type="text" hidden value="@paymentDto.TERMINAL" name="TERMINAL">
                                    <input type="text" hidden value="@paymentDto.DESC" name="DESC">
                                    <input type="text" hidden value="@paymentDto.DESC_ORDER" name="DESC_ORDER">
                                    <input type="text" hidden value="@paymentDto.EMAIL" name="EMAIL">
                                    <input type="text" hidden value="@paymentDto.NONCE" name="NONCE">
                                    <input type="text" hidden value="@paymentDto.crd_cvc" name="crd_cvc">
                                    <input type="text" hidden value="@paymentDto.crd_exp" name="crd_exp">
                                    <input type="text" hidden value="@paymentDto.crd_pan" name="crd_pan">
                                    <input type="text" hidden value="@paymentDto.Ucaf_Flag" name="Ucaf_Flag">
                                    <input type="text" hidden value="@paymentDto.Ucaf_Authentication_Data" name="Ucaf_Authentication_Data">
                                    <input type="text" hidden value="@paymentDto.P_SIGN" name="P_SIGN">
                                    <input type="text" hidden value="@paymentDto.WTYPE" name="WTYPE">
                                    <input type="text" hidden value="@paymentDto.INT_REF" name="INT_REF">
                                    <input type="text" hidden value="@paymentDto.BACKREF" name="BACKREF">
                                    <input type="text" hidden value="@paymentDto.MK_TOKEN" name="MK_TOKEN">
                                    <input type="text" hidden value="@paymentDto.CLIENT_ID" name="CLIENT_ID">
                                    <input type="text" hidden value="@paymentDto.LANGUAGE" name="LANGUAGE">
                                    <input type="text" hidden value="@paymentDto.RECUR_EXP" name="RECUR_EXP">
                                    <input type="text" hidden value="@paymentDto.RECUR_REF" name="RECUR_REF">
                                    <input type="text" hidden value="@paymentDto.MERCH_TOKEN_ID" name="MERCH_TOKEN_ID">
                                    <input type="text" hidden value="@paymentDto.RECUR_FREQ" name="RECUR_FREQ">
                                    <input type="text" hidden value="@paymentDto.PAYMENT_TO" name="PAYMENT_TO">
                                    <button type="submit" class="btn btn-success btn-lg">ОПЛАТИТЬ @paymentDto.AMOUNT @paymentDto.CURRENCY</button>
                                </form>
                            </div>
                        }
                        @if (loading)
                        {
                            <Loader loader="loading"></Loader>
                        }
                    </div>
                </div>
            }
            }
            else
            {
                <div class="row min-vh-100 d-flex justify-content-center align-items-center">
                 <div class="jumbotron col-md-8 text-center">
                    <h1 class="display-4">Курс уже приобретен!</h1>
                </div>
                </div>
            }
            
        </AuthorizeView>
                    
        <AuthorizeView>
            <NotAuthorized>
                <div class="row min-vh-100 d-flex justify-content-center align-items-center">
                    <div class="jumbotron col-md-8 text-center">
                        <h1 class="display-4">Пожалуйста авторизуйтесь чтобы совершать покупки!</h1>
                        <hr/>
                        <Navlink href="/login" class="btn btn-info btn-lg text-white" role="button">Вход</Navlink>
                    </div>
                </div>
                <NavLink class="btn btn-blue-shadow" href="/register">Зарегистрироваться</NavLink>
            </NotAuthorized>
        </AuthorizeView>      
        
        <AuthorizeView Roles="Admin">
            <div class="row min-vh-100 d-flex justify-content-center align-items-center">
                 <div class="jumbotron col-md-8 text-center">
                 <h1 class="display-4">Только пользователи могут совершать покупки</h1>
                 </div>
            </div>
        </AuthorizeView>
        
    </div>




@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    [Parameter]
    public string CourseAlias { get; set; }
    //Main Character
    PaymentDTO? paymentDto = null;
    TransactionCreateDTO TransactionCreateDto = new TransactionCreateDTO();
    bool isReady = false;
    Course Course;
    string userId = "";
    bool loading = false;
    bool hasSubscription = false;
    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateTask;
        userId = authenticationState.User.FindFirstValue(ClaimTypes.NameIdentifier);
        Course = await HomeService.GetCourseByAlias(CourseAlias);
        if (Course == null )
        {
            Navigation.NavigateTo("/");
        }
        else if (userId == null)
        {
            Navigation.NavigateTo("/login");
        }
        else if(!string.IsNullOrEmpty(userId) && Course != null)
        {
            var res = await PaymentService.HasSubscription(UserId: userId, Course.Id);
            hasSubscription = res.Data;
            if (!hasSubscription)
            {
                var result = await PaymentService.GetPaymentDto(userId, Course.Alias);
                if (result.Success == true)
                {
                    paymentDto = result.Data;
                } 
            }
                
        }


    }
    //Save Transaction
    protected async Task PayViaApi()
    {
       
            loading = true;
            TransactionCreateDto.Status = 0;
            TransactionCreateDto.CourseId = Course.Id;
            TransactionCreateDto.UserId = userId;
            TransactionCreateDto.ORDER = paymentDto.ORDER;
            TransactionCreateDto.AMOUNT = paymentDto.AMOUNT.ToString();
            TransactionCreateDto.CURRENCY = paymentDto.CURRENCY;
            var result = await PaymentService.CreateTransaction(TransactionCreateDto);
            if (result != true)
            {
                _toaster.Error("Что-то пошло не так");
            }
            else
            {
                loading = !result;
                isReady = result;
            }
        
        
        
    }
}
