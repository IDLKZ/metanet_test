@page "/admin/subscriptions-edit/{Id:int}"
@inject ISubscriptionService SubscriptionService
@inject NavigationManager NavigationManager



@if(SubscriptionUpdateDto != null)
{
	<!-- Card body START -->
				<div class="card-body">
					<!-- Step content START -->
					<div class="bs-stepper-content">
						

							<!-- Step 1 content START -->
							<div id="step-1" role="tabpanel" class="content show" aria-labelledby="steppertrigger1">
								<!-- Title -->
								<h4>Детали подписки</h4>

								<hr> <!-- Divider -->
								<EditForm Model="SubscriptionUpdateDto" OnValidSubmit="Save">
									<DataAnnotationsValidator></DataAnnotationsValidator>
									<ValidationSummary></ValidationSummary>
								<!-- Basic information START -->
								<div class="row g-4">
									<!-- Course title -->
									<div class="col-12">
										<p>Пользователь:@subscription.User.Name</p>
										<InputText hidden="hidden" @bind-Value="@SubscriptionUpdateDto.UserId"></InputText>
									</div>
									<div class="col-12">
										<p>Курс:@subscription.Course.Title</p>
										<InputNumber hidden="hidden" @bind-Value="@SubscriptionUpdateDto.CourseID"></InputNumber>
									</div>
									<div class="col-12">
										<p>Транзакция:@subscription.Transaction.ORDER</p>
										<InputNumber hidden="hidden" @bind-Value="@SubscriptionUpdateDto.TransactionId"></InputNumber>
									</div>
									<div class="col-12">
										Одобрен
										<InputCheckbox @bind-Value=@SubscriptionUpdateDto.Status></InputCheckbox>
									</div>
									
									<!-- Step 1 button -->
									<div class="d-flex justify-content-end mt-3">
										<button class="btn btn-primary next-btn mb-0">Обновить</button>
									</div>
								</div>

								</EditForm>
								<!-- Basic information START -->
							</div>
							<!-- Step 1 content END -->
					</div>
				</div>
				<!-- Card body END -->
}
else{
	<Loader loader=true></Loader>
}



@code {
    [Parameter] 
    public int Id { get; set; }

    SubscriptionUpdateDTO SubscriptionUpdateDto;
    Subscription subscription;
    
    
    
    protected override async Task OnInitializedAsync()
    {
	    var data = await SubscriptionService.GetById(Id);
        if (data == null)
        {
            NavigationManager.NavigateTo("/admin/subscriptions");
        }
        else
        {
	        subscription = data.Item1;
	        SubscriptionUpdateDto = data.Item2;
        }
	    

    }

    protected async  Task Save()
    {
        var result = await SubscriptionService.Update(Id, SubscriptionUpdateDto);
        if (result)
        {
            NavigationManager.NavigateTo("/admin/subscriptions");
        }
    }




}