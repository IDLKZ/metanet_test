@using Metanet.Shared
@using System.Security.Claims
@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject IUserService userService
@attribute [Authorize(Roles = "Customer")]
<ToastContainer />


<AuthorizeView Roles="Customer">
	
	<!-- Header START -->
	<Navbar></Navbar>
<!-- Header END -->

<!-- **************** MAIN CONTENT START **************** -->
<main class="pt-120 pb-5">
	
<!-- =======================
Page Banner START -->
<section class="pt-0">
	<!-- Main banner background image -->
	<div class="container-fluid px-0">
		<div class="bg-blue h-100px h-md-200px rounded-0" style="background:url(assets/images/pattern/04.png) no-repeat center center; background-size:cover;">
		</div>
	</div>
	<div class="container mt-n4">
		<div class="row">
			<!-- Profile banner START -->
			<div class="col-12">
				<div class="card bg-transparent card-body p-0">
					<div class="row d-flex justify-content-between">
						<!-- Avatar -->
						<div class="col-auto mt-4 mt-md-0">
							<div class="avatar avatar-xxl mt-n3">
								<img class="avatar-img rounded-circle border border-white border-3 shadow" src="@user.ImageUrl" alt="">
							</div>
						</div>
						<!-- Profile info -->
						<div class="col d-md-flex justify-content-between align-items-center mt-4">
							<div>
								<h1 class="my-1 fs-4">@user.Name <i class="bi bi-patch-check-fill text-info small"></i></h1>
							</div>
							
						</div>
					</div>
				</div>
				<!-- Profile banner END -->

				<!-- Advanced filter responsive toggler START -->
				<!-- Divider -->
				<hr class="d-xl-none">
				<div class="col-12 col-xl-3 d-flex justify-content-between align-items-center">
					<a class="h6 mb-0 fw-bold d-xl-none" href="instructor-dashboard.html#">Menu</a>
					<button class="btn btn-primary d-xl-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
						<i class="fas fa-sliders-h"></i>
					</button>
				</div>
				<!-- Advanced filter responsive toggler END -->
			</div>
		</div>
	</div>
</section>
<!-- =======================
Page Banner END -->

<!-- =======================
Page content START -->
<section class="pt-3">
	<div class="container">
		<div class="row">
			<!-- Right sidebar START -->
			<div class="col-xl-3">
				<SidebarCustomer userId="@(userId)"></SidebarCustomer>
			</div>
			<!-- Right sidebar END -->

			<!-- Main content START -->
			<div class="col-xl-9">

				@Body
				
			</div>
			<!-- Main content END -->
		</div><!-- Row END -->
	</div>
</section>
<!-- =======================
Page content END -->

</main>
<!-- **************** MAIN CONTENT END **************** -->

<!-- =======================Footer START -->
<Footer></Footer>


			


</AuthorizeView>

@code {
	[CascadingParameter]
	private Task<AuthenticationState> AuthenticationStateTask { get; set; }
	string userId;
	ApplicationUser user = new ApplicationUser();
	bool activeWrapper = false;

	protected override async Task OnInitializedAsync()
	{
		var authenticationState = await AuthenticationStateTask;
		userId = authenticationState.User.FindFirstValue(ClaimTypes.NameIdentifier);
		user = await userService.GetUserById(userId);
		if (authenticationState?.User?.Identity is null || !authenticationState.User.Identity.IsAuthenticated)
		{
			Navigation.NavigateTo("/login", true);
		}
		else if(authenticationState?.User?.Identity != null || authenticationState.User.Identity.IsAuthenticated)
		{
			if (!authenticationState.User.IsInRole(Constants.Customer))
			{
				Navigation.NavigateTo("/", true);
			}
		}

	}



}
